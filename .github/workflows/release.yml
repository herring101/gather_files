name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

  build:
    needs: create-release
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: gather_files
            asset_name: gather_files-linux-amd64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact_name: gather_files
            asset_name: gather_files-linux-musl-amd64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: gather_files.exe
            asset_name: gather_files-windows-amd64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: gather_files
            asset_name: gather_files-macos-amd64

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      
      - name: Install musl-tools (Linux musl only)
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools
      
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream

  create-installer:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Create install scripts
        run: |
          # PowerShellスクリプト生成
          cat > install.ps1 << 'EOF'
          $ErrorActionPreference = 'Stop'
          
          $repo = "herring101/gather_files"
          $file = "gather_files-windows-amd64.exe"
          $releases = "https://api.github.com/repos/$repo/releases"
          
          Write-Output "Fetching latest release..."
          $tag = (Invoke-WebRequest $releases | ConvertFrom-Json)[0].tag_name
          
          $download = "https://github.com/$repo/releases/download/$tag/$file"
          $name = $file.Split(".")[-2]
          $output = "$env:USERPROFILE\.cargo\bin\$name.exe"
          
          Write-Output "Downloading $download..."
          Invoke-WebRequest $download -Out $output
          
          Write-Output "Installing to $output"
          $(Get-Item $output).Attributes += 'ReadOnly'
          
          Write-Output "Installation completed!"
          Write-Output "You can now run 'gather_files' from your terminal."
          EOF
          
          # シェルスクリプト生成
          cat > install.sh << 'EOF'
          #!/bin/sh
          
          REPO="herring101/gather_files"
          RELEASES_URL="https://api.github.com/repos/$REPO/releases"
          
          case "$(uname -s)" in
              Darwin*)
                  PLATFORM='macos'
                  FILE="gather_files-macos-amd64"
                  ;;
              Linux*)
                  PLATFORM='linux'
                  FILE="gather_files-linux-amd64"
                  ;;
              *)
                  echo "Unsupported platform"
                  exit 1
                  ;;
          esac
          
          TAG=$(curl -s $RELEASES_URL | grep -o '"tag_name": "[^"]*' | head -n 1 | cut -d'"' -f4)
          DOWNLOAD_URL="https://github.com/$REPO/releases/download/$TAG/$FILE"
          
          INSTALL_DIR="$HOME/.cargo/bin"
          mkdir -p "$INSTALL_DIR"
          
          echo "Downloading gather_files..."
          curl -sL $DOWNLOAD_URL -o "$INSTALL_DIR/gather_files"
          chmod +x "$INSTALL_DIR/gather_files"
          
          echo "Installation completed!"
          echo "You can now run 'gather_files' from your terminal."
          EOF
      
      - name: Upload Install Scripts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: install.ps1
          asset_name: install.ps1
          asset_content_type: text/plain
      
      - name: Upload Install Scripts (Shell)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: install.sh
          asset_name: install.sh
          asset_content_type: text/plain