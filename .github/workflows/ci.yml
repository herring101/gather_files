name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

# Common environment settings
env:
  CARGO_TERM_COLOR: always
  # Use the compiler cache everywhere
  RUSTC_WRAPPER: sccache
  SCCACHE_GHA_ENABLED: "true"

permissions:
  contents: read

jobs:
  # -----------------------------------------------------------------
  # Linting (fmt + clippy)
  # -----------------------------------------------------------------
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Enable sccache
        uses: mozilla-actions/sccache-action@v0.0.9

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v2

      - name: rustfmt
        run: cargo fmt --all -- --check

      - name: clippy
        run: cargo clippy --all-features --all-targets -- -D warnings

  # -----------------------------------------------------------------
  # Build and run tests
  # -----------------------------------------------------------------
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: mozilla-actions/sccache-action@v0.0.9

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: cargo test
        run: cargo test --all-features --all-targets

  # -----------------------------------------------------------------
  # Type‑check only (fast feedback)
  # -----------------------------------------------------------------
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: mozilla-actions/sccache-action@v0.0.9

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: cargo check
        run: cargo check --workspace --all-targets --all-features

  # -----------------------------------------------------------------
  # Coverage (llvm‑cov + Codecov)
  # -----------------------------------------------------------------
  coverage:
    runs-on: ubuntu-latest
    # Only run coverage for pushes or for PRs from inside the repository
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - uses: mozilla-actions/sccache-action@v0.0.9

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - uses: Swatinem/rust-cache@v2

      - uses: taiki-e/install-action@cargo-llvm-cov

      - name: Generate coverage report
        run: |
          cargo llvm-cov --workspace --all-features --lcov --output-path lcov.info

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
